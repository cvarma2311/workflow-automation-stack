# ==== Versions (tested combo) ====
spark_version: "3.5.6"
iceberg_spark_runtime_version: "1.9.2"         # org.apache.iceberg:iceberg-spark-runtime-3.5_2.12
pg_jdbc_version: "42.7.7"                      # org.postgresql:postgresql
spark_hadoop_cloud_version: "3.5.6"            # org.apache.spark:spark-hadoop-cloud_2.12

# ==== Java ====
java_pkg: "openjdk-17-jdk"
java_home: "/usr/lib/jvm/java-17-openjdk-amd64"
java_cacerts_path: "{{ java_home }}/lib/security/cacerts"
java_cacerts_pass: "changeit"

# ==== MinIO (distributed) ====
minio_root_user: "minioadmin"
minio_root_password: "minioadmin"
minio_data_dir: "/mnt/minio/data"
minio_api_port: 9000
minio_console_port: 9001
minio_primary_host: "150.230.139.113"                # for endpoint URL + bucket creation
minio_cluster_hosts:
  - "150.230.139.113"
minio_bucket: "iceberg-warehouse"
minio_bin_url: "https://dl.min.io/server/minio/release/linux-amd64/minio"
mc_bin_url: "https://dl.min.io/client/mc/release/linux-amd64/mc"

# ==== MinIO TLS ====
enable_minio_tls: true
minio_cert_dir: "/etc/minio/certs"
minio_cert_common_name: "minio.local"
minio_cert_alt_names: ["150.230.139.113","minio.local"]
minio_tls_use_self_signed: true          # set to false if you supply real certs below
minio_public_crt_src: ""                 # e.g., "files/minio.crt" if using your own
minio_private_key_src: ""                # e.g., "files/minio.key"
minio_cert_alias: "minio-s3a"

# ==== PostgreSQL (Iceberg JDBC catalog) ====
pg_listen_address: "0.0.0.0"
pg_db: "iceberg_catalog"
pg_user: "iceberg_user"
pg_password: "iceberg_pass"
pg_port: 5432

# ==== Spark install paths ====
spark_root: "/opt/spark"
spark_jars_dir: "/opt/spark/jars"

# ==== Spark Standalone ====
spark_master_host: "150.230.139.113"
spark_master_port: 7077
spark_master_webui_port: 8080
spark_worker_webui_port: 8081

# ==== Iceberg catalog name ====
catalog_name: "local"

# ==== Warehouse + S3A endpoint (TLS) ====
warehouse_uri: "s3a://iceberg-warehouse/"
s3a_endpoint: "https://{{ minio_primary_host }}:{{ minio_api_port }}"
s3a_access_key: "{{ minio_root_user }}"
s3a_secret_key: "{{ minio_root_password }}"
pg_jdbc_uri: "jdbc:postgresql://{{ minio_primary_host }}:{{ pg_port }}/{{ pg_db }}"

# ==== Prefect ====
prefect_install_venv: "/opt/prefect/venv"
prefect_home: "/opt/prefect"
prefect_queue: "default"
prefect_api_host: "http://150.230.139.113:4200"   # Prefect UI/API
prefect_version: ""                       # "" = latest, or pin e.g. "2.20.8"
prefect_flow_name: "employee_pipeline"
prefect_deployment_name: "EmployeePipeline"
prefect_flow_dir: "{{ prefect_home }}/flows"
prefect_flow_file: "{{ prefect_flow_dir }}/employee_iceberg_flow.py"

# ==== On-demand spark-submit job ====
spark_job_dir: "/opt/prefect/jobs"
spark_job_script: "{{ spark_job_dir }}/run_employee_job.sh"

# ==== UFW firewall ====
ufw_enable: true
admin_allow_cidr: "any"                   # replace with your admin IP/CIDR to lock down
ssh_port: 22
prefect_port: 4200
